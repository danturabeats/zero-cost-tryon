name: Virtual Try-On Bot

# Triggered by Firebase Function via repository_dispatch webhook
on:
  repository_dispatch:
    types: [run_vto_bot]

jobs:
  run-bot:
    runs-on: ubuntu-latest
    timeout-minutes: 8 # Maximum 8 minutes per job (well within free tier limits)

    steps:
      # Step 1: Checkout repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # Step 3: Setup Firebase Service Account credentials
      - name: Create Firebase credentials file
        run: |
          echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}' > $HOME/firebase-key.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=$HOME/firebase-key.json" >> $GITHUB_ENV

      # Step 4: Install React app dependencies
      - name: Install React app dependencies
        working-directory: ./react-dev-app
        run: npm ci

      # Step 5: Start React dev server in background (localhost:3000)
      - name: Start React dev server
        working-directory: ./react-dev-app
        run: |
          echo "üöÄ Starting React dev server..."
          npm run dev &
          echo "‚è≥ Waiting for server to be ready..."
          sleep 20

          # Health check: retry connection up to 15 times (45 seconds)
          curl --retry 15 --retry-delay 3 --retry-connrefused http://localhost:3000 || {
            echo "‚ùå Failed to start dev server"
            exit 1
          }

          echo "‚úÖ Dev server is ready at http://localhost:3000"

      # Step 6: Install bot dependencies
      - name: Install bot dependencies
        working-directory: ./github-bot
        run: |
          npm ci
          npx playwright install chromium
          npx playwright install-deps chromium

      # Step 7: Run Playwright bot with injected data from webhook payload
      - name: Run Virtual Try-On Bot
        working-directory: ./github-bot
        env:
          # Data injected directly from Firebase Function's webhook payload
          REQUEST_ID: ${{ github.event.client_payload.request_id }}
          USER_PHOTO_URL: ${{ github.event.client_payload.user_photo_url }}
          GARMENT_PHOTO_URL: ${{ github.event.client_payload.garment_photo_url }}
          USER_EMAIL: ${{ github.event.client_payload.email }}
          # Cloudinary credentials from GitHub Secrets
          CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
          CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
        run: |
          echo "ü§ñ Starting bot with Request ID: $REQUEST_ID"
          node vto_script.js

      # Step 8: Upload logs on failure (for debugging)
      - name: Upload bot logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: bot-failure-logs
          path: |
            github-bot/*.log
            react-dev-app/*.log
          retention-days: 7
